% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bkg_pois.R
\name{bkg_heliports}
\alias{bkg_heliports}
\title{Heliports}
\usage{
bkg_heliports(
  ...,
  bbox = NULL,
  poly = NULL,
  predicate = "intersects",
  epsg = 3035,
  properties = NULL,
  max = NULL
)
}
\arguments{
\item{...}{Used to construct CQL filters. Dot arguments accept an R-like
syntax that is converted to CQL queries internally. These queries basically
consist of a property name on the left, an aribtrary vector on the right,
and an operator that links both sides. If multiple queries are provided,
they will be chained with \code{AND}. The following operators and their
respective equivalents in CQL are supported:

\tabular{ll}{
\strong{R} \tab \strong{CQL}\cr
\code{==}      \tab \code{=}    \cr
\code{!=}      \tab \code{<>}   \cr
\code{<}       \tab \code{<}    \cr
\code{>}       \tab \code{>}    \cr
\code{>=}      \tab \code{>=}   \cr
\code{<=}      \tab \code{<=}   \cr
\code{~}       \tab \code{~}    \cr
\code{\%!~\%}    \tab \code{!~}   \cr
\code{\%LIKE\%}  \tab \code{LIKE} \cr
\code{\%ILIKE\%} \tab \code{ILIKE}\cr
\code{\%in\%}    \tab \code{IN}
}

To construct more complex queries, you can use the \code{filter} argument
to pass CQL queries directly.}

\item{bbox}{An sf geometry or a boundary box vector of the format
\code{c(xmin, ymin, xmax, ymax)}. Used as a geometric filter to include
only those geometries that relate to \code{bbox} according to the predicate
specified in \code{predicate}. If an sf geometry is provided, coordinates
are automatically transformed to ESPG:25832 (the default CRS), otherwise
they are expected to be in EPSG:25832.}

\item{poly}{An sf geometry. Used as a geometric filter to include
only those geometries that relate to \code{poly} according to the predicate
specified in \code{predicate}. Coordinates are automatically transformed to
ESPG:25832 (the default CRS).}

\item{predicate}{A spatial predicate that is used to relate the output
geometries with the object specified in \code{bbox} or \code{poly}. For
example, if \code{predicate = "within"}, and \code{bbox} is specified,
returns only those geometries that lie within \code{bbox}. Can be one of
\code{"equals"}, \code{"disjoint"}, \code{"intersects"}, \code{"touches"},
\code{"crosses"}, \code{"within"}, \code{"contains"}, \code{"overlaps"},
\code{"relate"}, \code{"dwithin"}, or \code{"beyond"}. Defaults to
\code{"intersects"}.}

\item{epsg}{An EPSG code specifying a coordinate reference system of the
output. If you're unsure what this means, try running
\code{sf::st_crs(...)$epsg} on a spatial object that you are working with.
Defaults to 3035.}

\item{properties}{Vector of columns to include in the output.}

\item{max}{Maximum number of results to return.}
}
\value{
A dataframe with the following columns: \itemize{
\item{\code{name}}: Geographical name of the POI
\item{\code{gemeinde}}: Municipality name
\item{\code{verwaltung}}: Administrative association name
\item{\code{kreis}}: District name
\item{\code{regierungs}}: Government region name
\item{\code{bundesland}}: Federal state name
\item{\code{code}: Identifier of the heliport}
\item{\code{name_bkg}: Name of the landing site according to BKG}
\item{\code{name_dfs}: Name of the landing size according to Deutsche
Flugsicherung (DFS)}
\item{\code{airport_pk}: Identifier according to the LFS aviation manual}
\item{\code{befestigun}: Pavement type of the landing site. Can be: \itemize{
\item{befestigt: paved}
\item{teilweise befestigt: partially paved}
\item{unbefestigt: unpaved}
}}
\item{\code{kennzeich}: Marking of the landing size. Can be: \itemize{
\item{gekennzeichnet: marked}
\item{nicht gekennzeichnet: not marked}
}}
\item{\code{lage}: Location of the landing size. Can be: \itemize{
\item{D: Roof}
\item{F: Field}
\item{PG: Platform next to a hospital}
\item{W: Pasture}
\item{LP: Landing site}
\item{PP: Parking lot}
\item{LP / W: Paved landing size on pasture}
\item{F / W: Field or pasture}
\item{LP / Str.: Landing size next to a street}
}}
\item{\code{typ}: Type of heliport. Can be: \itemize{
\item{H: Heliport}
\item{HH: Heliport at a hospital}
\item{MH: Military heliport}
}}
\item{\code{typ2}: Additional heliport type for landing sites with an
air rescue station. Can be: \itemize{
\item{HRLS: Helicopter air rescue station}
\item{ITH: Intensive transport helicopter}
}}
\item{\code{betreiber}: Operator of the heliport}
\item{\code{helikopter}: Name of the helicopter belonging to the
air rescue station}
\item{\code{status}: Whether the point geometry was edited by the BKG.
Can be: \itemize{
\item{Original: not edited}
\item{Verschoben: moved}
\item{neu: newly added}
}}
\item{\code{quelle}: Source of the information. Can be: \itemize{
\item{BKG: Own research by the BKG}
\item{DFS-Liste: Provided by DFS}
\item{LBA-Liste: Provided by the Federal Aviation Office (LBA)}
\item{MHW: Provided by the Medical Disaster Relief Organization (MHW)}
\item{RTH.Info: Provided by rth.info}
}}
}
}
\description{
Get heliports in Germany. Based on data from third-party providers and image
classification of aerial imagery.
}
\examples{
\dontshow{if (ffm_run_examples()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Get only military heliports
bkg_heliports(typ == "MH")

# Get only rooftop heliports
bkg_heliports(lage == "D")
\dontshow{\}) # examplesIf}
}
\seealso{
\href{https://sgx.geodatenzentrum.de/web_public/gdz/dokumentation/deu/poi-open.pdf}{\code{wfs_poi_open} documentation}

\href{https://mis.bkg.bund.de/trefferanzeige?docuuid=461731F5-62B1-45A9-8E7E-BF6AF93E3EFA}{\code{wfs_poi_open} MIS record}

Other points of interest: 
\code{\link{bkg_airports}()},
\code{\link{bkg_crossings}()},
\code{\link{bkg_kilometrage}()},
\code{\link{bkg_seaports}()},
\code{\link{bkg_stations}()},
\code{\link{bkg_trauma_centers}()}
}
\concept{points of interest}
