% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bkg_pois.R
\name{bkg_stations}
\alias{bkg_stations}
\title{Stations and stops}
\usage{
bkg_stations(
  ...,
  bbox = NULL,
  poly = NULL,
  predicate = "intersects",
  epsg = 3035,
  properties = NULL,
  max = NULL
)
}
\arguments{
\item{...}{Used to construct CQL filters. Dot arguments accept an R-like
syntax that is converted to CQL queries internally. These queries basically
consist of a property name on the left, an aribtrary vector on the right,
and an operator that links both sides. If multiple queries are provided,
they will be chained with \code{AND}. The following operators and their
respective equivalents in CQL are supported:

\tabular{ll}{
\strong{R} \tab \strong{CQL}\cr
\code{==}      \tab \code{=}    \cr
\code{!=}      \tab \code{<>}   \cr
\code{<}       \tab \code{<}    \cr
\code{>}       \tab \code{>}    \cr
\code{>=}      \tab \code{>=}   \cr
\code{<=}      \tab \code{<=}   \cr
\code{~}       \tab \code{~}    \cr
\code{\%!~\%}    \tab \code{!~}   \cr
\code{\%LIKE\%}  \tab \code{LIKE} \cr
\code{\%ILIKE\%} \tab \code{ILIKE}\cr
\code{\%in\%}    \tab \code{IN}
}

To construct more complex queries, you can use the \code{filter} argument
to pass CQL queries directly.}

\item{bbox}{An sf geometry or a boundary box vector of the format
\code{c(xmin, ymin, xmax, ymax)}. Used as a geometric filter to include
only those geometries that relate to \code{bbox} according to the predicate
specified in \code{predicate}.}

\item{poly}{An sf geometry. Used as a geometric filter to include
only those geometries that relate to \code{poly} according to the predicate
specified in \code{predicate}.}

\item{predicate}{A spatial predicate that is used to relate the output
geometries with the object specified in \code{bbox} or \code{poly}. For
example, if \code{predicate = "within"}, and \code{bbox} is specified,
returns only those geometries that lie within \code{bbox}. Can be one of
\code{"equals"}, \code{"disjoint"}, \code{"intersects"}, \code{"touches"},
\code{"crosses"}, \code{"within"}, \code{"contains"}, \code{"overlaps"},
\code{"relate"}, \code{"dwithin"}, or \code{"beyond"}. Defaults to
\code{"intersects"}.}

\item{epsg}{An EPSG code specifying a coordinate reference system of the
output. If you're unsure what this means, try running
\code{sf::st_crs(...)$epsg} on a spatial object that you are working with.
Defaults to 3035.}

\item{properties}{Vector of columns to include in the output.}

\item{max}{Maximum number of results to return.}
}
\value{
A dataframe with the following columns: \itemize{
\item{\code{name}}: Geographical name of the POI
\item{\code{gemeinde}}: Municipality name
\item{\code{verwaltung}}: Administrative association name
\item{\code{kreis}}: District name
\item{\code{regierungs}}: Government region name
\item{\code{bundesland}}: Federal state name
\item{\code{stop_id}: Identifier of the station or stop}
\item{\code{parent_st}: Identifier of the parent station if applicable}
\item{\code{verkehrsm}: Vehicle used at the station, comma-separated
and sorted alphabetically}
\item{\code{art}: Hierarchical position of a station. Can be: \itemize{
\item{Station: A physical structure and hierarchically superior}
\item{Haltestelle: Part of a structure and hierarchically inferior}
}}
\item{\code{tag_f_awo}: Mean departures per day in a work week}
\item{\code{tag_f_wo}: Mean departures per day in a full week}
}
}
\description{
Retrieve data on public transport stations and stops in Germany. Stations
and stops are hierarchical. This means that stations represent the
structural facilities as hierarchically superior objects and stops are
hierarchically inferiors parts of a station (e.g., a single platform
at a bus stop).
}
\examples{
\dontshow{if (ffm_run_examples()) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Get all long-distance train stations
bkg_stations(verkehrsm \%LIKE\% "\%Fernzug\%", art == "Station")

# Get all platforms of long-distance train stations
bkg_stations(verkehrsm \%LIKE\% "\%Fernzug\%", art == "Haltestelle")

# Get all stops with high traffic
bkg_stations(tag_f_awo > 1000, art == "Station")

# Get all bus stops with low traffic
bkg_stations(tag_f_awo < 1, verkehrsm \%LIKE\% "\%Bus\%", art == "Station")
\dontshow{\}) # examplesIf}
}
\seealso{
\href{https://sgx.geodatenzentrum.de/web_public/gdz/dokumentation/deu/poi-open.pdf}{\code{wfs_poi_open} documentation}

\href{https://mis.bkg.bund.de/trefferanzeige?docuuid=461731F5-62B1-45A9-8E7E-BF6AF93E3EFA}{\code{wfs_poi_open} MIS record}

Other points of interest: 
\code{\link{bkg_airports}()},
\code{\link{bkg_crossings}()},
\code{\link{bkg_heliports}()},
\code{\link{bkg_kilometrage}()},
\code{\link{bkg_seaports}()},
\code{\link{bkg_trauma_centers}()}
}
\concept{points of interest}
